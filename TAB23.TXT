OBJECT Table 23 Vendor
{
  OBJECT-PROPERTIES
  {
    Date=15/12/17;
    Time=11:56:05;
    Modified=Yes;
    Version List=NAVW110.00.00.18976,NAVGB10.00.00.18976,SBM6.10.22,SBM6.11.00,SBM6.11.17,SBM6.16.02;
  }
  PROPERTIES
  {
    Permissions=TableData 25=r;
    DataCaptionFields=No.,Name;
    OnInsert=VAR
               "**COSL**"@1000000002 : Integer;
               VendorPostingGroup@1000000001 : Record 93;
               ltblPaymentTerms@1000000000 : Record 3;
             BEGIN

               //-010
               //-012
               // IF NOT (CheckPermission('CONT-EDIT',USERID) THEN
               IF NOT (CheckPermission('CONT-EDIT',USERID) OR CheckPermission('CONT-ADMIN',USERID)) THEN
                 ERROR('You do not have permission to insert a Vendor.');
               //+012
               //+010

               IF "No." = '' THEN BEGIN
                 PurchSetup.GET;
                 PurchSetup.TESTFIELD("Vendor Nos.");
                 NoSeriesMgt.InitSeries(PurchSetup."Vendor Nos.",xRec."No. Series",0D,"No.","No. Series");
               END;

               IF "Invoice Disc. Code" = '' THEN
                 "Invoice Disc. Code" := "No.";

               IF NOT (InsertFromContact OR (InsertFromTemplate AND (Contact <> ''))) THEN
                 UpdateContFromVend.OnInsert(Rec);

               DimMgt.UpdateDefaultDim(
                 DATABASE::Vendor,"No.",
                 "Global Dimension 1 Code","Global Dimension 2 Code");

               //-001
               PurchSetup.GET;
               PurchSetup.TESTFIELD("Payables Account No.");
               IF NOT VendorPostingGroup.GET('DEFAULT') THEN BEGIN
                 VendorPostingGroup.Code := 'DEFAULT';
                 VendorPostingGroup."Payables Account" := PurchSetup."Payables Account No.";
                 VendorPostingGroup.INSERT(TRUE);
               END;
               "Vendor Posting Group" := VendorPostingGroup.Code;

               //-017
               ////-016
               //ltblPaymentTerms.SETFILTER(Code,'%1','DEFAULT');
               //IF NOT ltblPaymentTerms.FINDFIRST THEN
               //  ERROR('Payment Terms Code DEFAULT needs to be included within the Payment Terms setup');
               //"Payment Terms Code" := 'DEFAULT';
               ////+016
               //+017

               LastModified;
               //+001

               //-011
               IF "Type of Supplier" = 0 THEN
                 "Type of Supplier" := 1;    //'Standard'
               //+011
             END;

    OnModify=BEGIN

               //-010
               //-012
               // IF NOT (CheckPermission('CONT-EDIT',USERID) THEN
               IF NOT (CheckPermission('CONT-EDIT',USERID) OR CheckPermission('CONT-ADMIN',USERID)) THEN
                 ERROR('You do not have permission to modify a Vendor.');
               //+012
               //+010

               "Last Date Modified" := TODAY;

               IF (Name <> xRec.Name) OR
                  ("Search Name" <> xRec."Search Name") OR
                  ("Name 2" <> xRec."Name 2") OR
                  (Address <> xRec.Address) OR
                  ("Address 2" <> xRec."Address 2") OR
                  (City <> xRec.City) OR
                  ("Phone No." <> xRec."Phone No.") OR
                  ("Telex No." <> xRec."Telex No.") OR
                  ("Territory Code" <> xRec."Territory Code") OR
                  ("Currency Code" <> xRec."Currency Code") OR
                  ("Language Code" <> xRec."Language Code") OR
                  ("Purchaser Code" <> xRec."Purchaser Code") OR
                  ("Country/Region Code" <> xRec."Country/Region Code") OR
                  ("Fax No." <> xRec."Fax No.") OR
                  ("Telex Answer Back" <> xRec."Telex Answer Back") OR
                  ("VAT Registration No." <> xRec."VAT Registration No.") OR
                  ("Post Code" <> xRec."Post Code") OR
                  (County <> xRec.County) OR
                  ("E-Mail" <> xRec."E-Mail") OR
                  ("Home Page" <> xRec."Home Page")

                  //-005
                  OR
                  ("Type of Supplier" <> xRec."Type of Supplier")
                  //+005
                  //-007
                  OR ("Supply Chain Charter Signed" <> xRec."Supply Chain Charter Signed")
                  OR ("Signed On" <> xRec."Signed On")
                  //+007
               THEN BEGIN
                 MODIFY;
                 UpdateContFromVend.OnModify(Rec);
                 IF NOT FIND THEN BEGIN
                   RESET;
                   IF FIND THEN;
                 END;
               END;

               //-001
               LastModified;
               //+001

               //-011
               IF "Type of Supplier" = 0 THEN
                 "Type of Supplier" := 1;    //'Standard'
               //+011
             END;

    OnDelete=VAR
               ItemVendor@1000 : Record 99;
               PurchPrice@1001 : Record 7012;
               PurchLineDiscount@1002 : Record 7014;
               PurchPrepmtPct@1003 : Record 460;
               SocialListeningSearchTopic@1005 : Record 871;
               CustomReportSelection@1006 : Record 9657;
               PurchOrderLine@1007 : Record 39;
               VATRegistrationLogMgt@1004 : Codeunit 249;
               "**COSL**"@1000000005 : Integer;
               Job@1000000004 : Record 167;
               PurHeader@1000000003 : Record 50158;
               VPC@1000000002 : Record 50123;
               VendBank@1000000001 : Record 288;
               OrderAddress@1000000000 : Record 224;
             BEGIN

               //-010
               //-012
               // IF NOT (CheckPermission('CONT-EDIT',USERID) THEN
               IF NOT (CheckPermission('CONT-EDIT',USERID) OR CheckPermission('CONT-ADMIN',USERID)) THEN
                 ERROR('You do not have permission to delete a Vendor.');
               //+012
               //+010

               //-001
               //Check vendor is not a cert auth used on a project
               IF Type = Type::"Certification Authority" THEN
               BEGIN
                 Job.RESET;
                 Job.SETRANGE("Certification Authority","No.");
                 IF Job.FIND('-') THEN
                   ERROR('Certification Authority %1 cannot be deleted since is it in use on project %2',
                         "No.",Job."No.");
               END;

               IF Type = Type::Vendor THEN
               BEGIN
                  PurHeader.RESET;
                  PurHeader.SETCURRENTKEY("Buy-from Vendor No.","Vendor Authorization No.");
                  PurHeader.SETFILTER("Buy-from Vendor No.",'%1',"No.");
                  IF PurHeader.FIND('-') THEN
                  BEGIN
                      ERROR('Vendor %1 cannot be deleted as it is used on : %2-%3',
                             "No.",PurHeader."Document Type", PurHeader."No.");
                  END;

                  VPC.RESET;
                  VPC.SETCURRENTKEY("Vendor No.");
                  VPC.SETFILTER("Vendor No.",'%1',"No.");
                  IF VPC.FIND('-') THEN
                  BEGIN
                      ERROR('Vendor %1 cannot be deleted as it is used on CBL or PBL',"No.");
                  END;

               END;

               IF Type = Type::Vendor THEN
               BEGIN
                  VendBank.RESET;
                  VendBank.SETFILTER("Vendor No.",'%1',"No.");
                  IF VendBank.FIND('-') THEN
                  BEGIN
                      ERROR('Vendor %1 cannot be deleted as it has bank accounts');
                  END;
                  OrderAddress.RESET;
                  OrderAddress.SETFILTER("Vendor No.",'%1',"No.");
                  IF OrderAddress.FIND('-') THEN
                  BEGIN
                      ERROR('Vendor %1 cannot be deleted as it has order addresses');
                  END;
               END;
               //+001

               MoveEntries.MoveVendorEntries(Rec);

               CommentLine.SETRANGE("Table Name",CommentLine."Table Name"::Vendor);
               CommentLine.SETRANGE("No.","No.");
               //-001
               //CommentLine.DELETEALL;
               CommentLine.DELETEALL(TRUE);
               //+001

               VendBankAcc.SETRANGE("Vendor No.","No.");
               //-001
               //VendBankAcc.DELETEALL;
               VendBankAcc.DELETEALL(TRUE);
               //+001

               OrderAddr.SETRANGE("Vendor No.","No.");
               //-001
               //OrderAddr.DELETEALL;
               OrderAddr.DELETEALL(TRUE);
               //+001

               ApprovalsMgmt.OnCancelVendorApprovalRequest(Rec);

               MoveEntries.MoveVendorEntries(Rec);

               CommentLine.SETRANGE("Table Name",CommentLine."Table Name"::Vendor);
               CommentLine.SETRANGE("No.","No.");
               CommentLine.DELETEALL;

               VendBankAcc.SETRANGE("Vendor No.","No.");
               VendBankAcc.DELETEALL;

               OrderAddr.SETRANGE("Vendor No.","No.");
               OrderAddr.DELETEALL;

               ItemCrossReference.SETCURRENTKEY("Cross-Reference Type","Cross-Reference Type No.");
               ItemCrossReference.SETRANGE("Cross-Reference Type",ItemCrossReference."Cross-Reference Type"::Vendor);
               ItemCrossReference.SETRANGE("Cross-Reference Type No.","No.");
               ItemCrossReference.DELETEALL;

               PurchOrderLine.SETCURRENTKEY("Document Type","Pay-to Vendor No.");
               PurchOrderLine.SETFILTER(
                 "Document Type",'%1|%2',
                 PurchOrderLine."Document Type"::Order,
                 PurchOrderLine."Document Type"::"Return Order");
               PurchOrderLine.SETRANGE("Pay-to Vendor No.","No.");
               IF PurchOrderLine.FINDFIRST THEN
                 ERROR(
                   Text000,
                   TABLECAPTION,"No.",
                   PurchOrderLine."Document Type");

               PurchOrderLine.SETRANGE("Pay-to Vendor No.");
               PurchOrderLine.SETRANGE("Buy-from Vendor No.","No.");
               IF NOT PurchOrderLine.ISEMPTY THEN
                 ERROR(
                   Text000,
                   TABLECAPTION,"No.");

               UpdateContFromVend.OnDelete(Rec);

               DimMgt.DeleteDefaultDim(DATABASE::Vendor,"No.");

               ServiceItem.SETRANGE("Vendor No.","No.");
               ServiceItem.MODIFYALL("Vendor No.",'');

               ItemVendor.SETRANGE("Vendor No.","No.");
               ItemVendor.DELETEALL(TRUE);

               IF NOT SocialListeningSearchTopic.ISEMPTY THEN BEGIN
                 SocialListeningSearchTopic.FindSearchTopic(SocialListeningSearchTopic."Source Type"::Vendor,"No.");
                 SocialListeningSearchTopic.DELETEALL;
               END;

               PurchPrice.SETCURRENTKEY("Vendor No.");
               PurchPrice.SETRANGE("Vendor No.","No.");
               PurchPrice.DELETEALL(TRUE);

               PurchLineDiscount.SETCURRENTKEY("Vendor No.");
               PurchLineDiscount.SETRANGE("Vendor No.","No.");
               PurchLineDiscount.DELETEALL(TRUE);

               CustomReportSelection.SETRANGE("Source Type",DATABASE::Vendor);
               CustomReportSelection.SETRANGE("Source No.","No.");
               CustomReportSelection.DELETEALL;

               PurchPrepmtPct.SETCURRENTKEY("Vendor No.");
               PurchPrepmtPct.SETRANGE("Vendor No.","No.");
               PurchPrepmtPct.DELETEALL(TRUE);

               VATRegistrationLogMgt.DeleteVendorLog(Rec);
             END;

    OnRename=BEGIN
               ApprovalsMgmt.RenameApprovalEntries(xRec.RECORDID,RECORDID);
               "Last Date Modified" := TODAY;
               IF xRec."Invoice Disc. Code" = xRec."No." THEN
                 "Invoice Disc. Code" := "No.";
               //-001
               LastModified;
               //+001
             END;

    CaptionML=[ENU=Vendor;
               ENG=Vendor];
    LookupPageID=Page27;
    DrillDownPageID=Page27;
  }
  FIELDS
  {
    { 1   ;   ;No.                 ;Code20        ;AltSearchField=Search Name;
                                                   OnValidate=BEGIN
                                                                IF "No." <> xRec."No." THEN BEGIN
                                                                  PurchSetup.GET;
                                                                  NoSeriesMgt.TestManual(PurchSetup."Vendor Nos.");
                                                                  "No. Series" := '';
                                                                END;
                                                                IF "Invoice Disc. Code" = '' THEN
                                                                  "Invoice Disc. Code" := "No.";


                                                                //-001
                                                                IF "No." <> '' THEN
                                                                   "Vendor Contact Type" := GetContactType("No.");
                                                                //+001
                                                              END;

                                                   CaptionML=[ENU=No.;
                                                              ENG=No.] }
    { 2   ;   ;Name                ;Text50        ;OnValidate=BEGIN
                                                                IF ("Search Name" = UPPERCASE(xRec.Name)) OR ("Search Name" = '') THEN
                                                                  "Search Name" := Name;
                                                              END;

                                                   CaptionML=[ENU=Name;
                                                              ENG=Name] }
    { 3   ;   ;Search Name         ;Code50        ;CaptionML=[ENU=Search Name;
                                                              ENG=Search Name] }
    { 4   ;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              ENG=Name 2] }
    { 5   ;   ;Address             ;Text50        ;CaptionML=[ENU=Address;
                                                              ENG=Address] }
    { 6   ;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              ENG=Address 2] }
    { 7   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   OnLookup=BEGIN

                                                              //-009
                                                              RecHandledMDM;
                                                              //+009
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              ENG=City] }
    { 8   ;   ;Contact             ;Text50        ;OnValidate=VAR
                                                                Cont@1000 : Record 5050;
                                                              BEGIN
                                                                IF RMSetup.GET THEN
                                                                  IF RMSetup."Bus. Rel. Code for Vendors" <> '' THEN BEGIN
                                                                    IF (xRec.Contact = '') AND (xRec."Primary Contact No." = '') AND (Contact <> '') THEN BEGIN
                                                                      MODIFY;
                                                                      UpdateContFromVend.OnModify(Rec);
                                                                      UpdateContFromVend.InsertNewContactPerson(Rec,FALSE);
                                                                      MODIFY(TRUE);
                                                                    END;
                                                                    EXIT;
                                                                  END;

                                                                IF Cont.GET("Primary Contact No.") THEN
                                                                  IF Cont.Name = Contact THEN
                                                                    EXIT;

                                                                VALIDATE("Primary Contact No.",'');
                                                              END;

                                                   OnLookup=VAR
                                                              ContactBusinessRelation@1001 : Record 5054;
                                                              Cont@1000 : Record 5050;
                                                            BEGIN
                                                              ContactBusinessRelation.SETCURRENTKEY("Link to Table","No.");
                                                              ContactBusinessRelation.SETRANGE("Link to Table",ContactBusinessRelation."Link to Table"::Vendor);
                                                              ContactBusinessRelation.SETRANGE("No.","No.");
                                                              IF ContactBusinessRelation.FINDFIRST THEN
                                                                Cont.SETRANGE("Company No.",ContactBusinessRelation."Contact No.")
                                                              ELSE
                                                                Cont.SETRANGE("Company No.",'');

                                                              IF "Primary Contact No." <> '' THEN
                                                                IF Cont.GET("Primary Contact No.") THEN ;
                                                              IF PAGE.RUNMODAL(0,Cont) = ACTION::LookupOK THEN
                                                                VALIDATE("Primary Contact No.",Cont."No.");
                                                            END;

                                                   CaptionML=[ENU=Contact;
                                                              ENG=Contact] }
    { 9   ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              ENG=Phone No.] }
    { 10  ;   ;Telex No.           ;Text20        ;CaptionML=[ENU=Telex No.;
                                                              ENG=Telex No.] }
    { 14  ;   ;Our Account No.     ;Text20        ;CaptionML=[ENU=Our Account No.;
                                                              ENG=Our Account No.] }
    { 15  ;   ;Territory Code      ;Code10        ;TableRelation=Territory;
                                                   CaptionML=[ENU=Territory Code;
                                                              ENG=Territory Code] }
    { 16  ;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              ENG=Global Dimension 1 Code];
                                                   CaptionClass='1,1,1' }
    { 17  ;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              ENG=Global Dimension 2 Code];
                                                   CaptionClass='1,1,2' }
    { 19  ;   ;Budgeted Amount     ;Decimal       ;CaptionML=[ENU=Budgeted Amount;
                                                              ENG=Budgeted Amount];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 21  ;   ;Vendor Posting Group;Code10        ;TableRelation="Vendor Posting Group";
                                                   CaptionML=[ENU=Vendor Posting Group;
                                                              ENG=Vendor Posting Group] }
    { 22  ;   ;Currency Code       ;Code10        ;TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Code;
                                                              ENG=Currency Code] }
    { 24  ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              ENG=Language Code] }
    { 26  ;   ;Statistics Group    ;Integer       ;CaptionML=[ENU=Statistics Group;
                                                              ENG=Statistics Group] }
    { 27  ;   ;Payment Terms Code  ;Code10        ;TableRelation="Payment Terms";
                                                   CaptionML=[ENU=Payment Terms Code;
                                                              ENG=Payment Terms Code] }
    { 28  ;   ;Fin. Charge Terms Code;Code10      ;TableRelation="Finance Charge Terms";
                                                   CaptionML=[ENU=Fin. Charge Terms Code;
                                                              ENG=Fin. Charge Terms Code] }
    { 29  ;   ;Purchaser Code      ;Code10        ;TableRelation=Salesperson/Purchaser;
                                                   CaptionML=[ENU=Purchaser Code;
                                                              ENG=Purchaser Code] }
    { 30  ;   ;Shipment Method Code;Code10        ;TableRelation="Shipment Method";
                                                   CaptionML=[ENU=Shipment Method Code;
                                                              ENG=Shipment Method Code] }
    { 31  ;   ;Shipping Agent Code ;Code10        ;TableRelation="Shipping Agent";
                                                   CaptionML=[ENU=Shipping Agent Code;
                                                              ENG=Shipping Agent Code] }
    { 33  ;   ;Invoice Disc. Code  ;Code20        ;TableRelation=Vendor;
                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Invoice Disc. Code;
                                                              ENG=Invoice Disc. Code] }
    { 35  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCountryCode(City,"Post Code",County,"Country/Region Code");
                                                              END;

                                                   OnLookup=VAR
                                                              frmCountriesRegions@1000000001 : Page 10;
                                                              "tblCountry/Region"@1000000000 : Record 9;
                                                            BEGIN

                                                              //-009
                                                              RecHandledMDM;
                                                              //+009

                                                              //-015
                                                              CLEAR(frmCountriesRegions);
                                                              frmCountriesRegions.SETRECORD("tblCountry/Region");
                                                              frmCountriesRegions.SETTABLEVIEW("tblCountry/Region");
                                                              frmCountriesRegions.LOOKUPMODE(TRUE);
                                                              IF frmCountriesRegions.RUNMODAL = ACTION::LookupOK THEN BEGIN
                                                                frmCountriesRegions.GETRECORD("tblCountry/Region");
                                                                "Country/Region Code" := "tblCountry/Region".Code;
                                                              END;
                                                              //+015
                                                            END;

                                                   CaptionML=[ENU=Country/Region Code;
                                                              ENG=Country/Region Code] }
    { 38  ;   ;Comment             ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Comment Line" WHERE (Table Name=CONST(Vendor),
                                                                                           No.=FIELD(No.)));
                                                   CaptionML=[ENU=Comment;
                                                              ENG=Comment];
                                                   Editable=No }
    { 39  ;   ;Blocked             ;Option        ;OnValidate=BEGIN
                                                                //-002
                                                                IF Blocked = Blocked::Payment THEN
                                                                  ERROR('The value "%1" is not valid for this system. To block a %2, select the option "All"',Blocked,TABLENAME);
                                                                //+002
                                                              END;

                                                   CaptionML=[ENU=Blocked;
                                                              ENG=Blocked];
                                                   OptionCaptionML=[ENU=" ,Payment,All";
                                                                    ENG=" ,Payment,All"];
                                                   OptionString=[ ,Payment,All] }
    { 45  ;   ;Pay-to Vendor No.   ;Code20        ;TableRelation=Vendor;
                                                   OnValidate=VAR
                                                                "**COSL**"@1000000002 : Integer;
                                                                ContactBusinessRelation@1000000001 : Record 5054;
                                                                Contact@1000000000 : Record 5050;
                                                              BEGIN

                                                                //-001
                                                                IF "Pay-to Vendor No." <> '' THEN BEGIN
                                                                  ContactBusinessRelation.SETRANGE("No.","Pay-to Vendor No.");
                                                                  IF NOT ContactBusinessRelation.FINDFIRST THEN
                                                                    ERROR('Vendor %1 cannot be used as the "Pay-to Vendor No." as it has not associated Contact record.',"Pay-to Vendor No.");

                                                                  Contact.SETRANGE("No.",ContactBusinessRelation."Contact No.");
                                                                  IF NOT Contact.FINDFIRST THEN
                                                                    ERROR('Vendor %1 cannot be used as the "Pay-to Vendor No." as it has not associated Contact record.',"Pay-to Vendor No.");
                                                                END;
                                                                //+001
                                                              END;

                                                   CaptionML=[ENU=Pay-to Vendor No.;
                                                              ENG=Pay-to Vendor No.] }
    { 46  ;   ;Priority            ;Integer       ;CaptionML=[ENU=Priority;
                                                              ENG=Priority] }
    { 47  ;   ;Payment Method Code ;Code10        ;TableRelation="Payment Method";
                                                   CaptionML=[ENU=Payment Method Code;
                                                              ENG=Payment Method Code] }
    { 54  ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              ENG=Last Date Modified];
                                                   Editable=No }
    { 55  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              ENG=Date Filter] }
    { 56  ;   ;Global Dimension 1 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Filter;
                                                              ENG=Global Dimension 1 Filter];
                                                   CaptionClass='1,3,1' }
    { 57  ;   ;Global Dimension 2 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Filter;
                                                              ENG=Global Dimension 2 Filter];
                                                   CaptionClass='1,3,2' }
    { 58  ;   ;Balance             ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Vendor No.=FIELD(No.),
                                                                                                                Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Balance;
                                                              ENG=Balance];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 59  ;   ;Balance (LCY)       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Vendor No.=FIELD(No.),
                                                                                                                        Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                        Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                        Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Balance (LCY);
                                                              ENG=Balance (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 60  ;   ;Net Change          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Vendor No.=FIELD(No.),
                                                                                                                Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                Posting Date=FIELD(Date Filter),
                                                                                                                Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Net Change;
                                                              ENG=Net Change];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 61  ;   ;Net Change (LCY)    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Vendor No.=FIELD(No.),
                                                                                                                        Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                        Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                        Posting Date=FIELD(Date Filter),
                                                                                                                        Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Net Change (LCY);
                                                              ENG=Net Change (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 62  ;   ;Purchases (LCY)     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Vendor Ledger Entry"."Purchase (LCY)" WHERE (Vendor No.=FIELD(No.),
                                                                                                                  Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                  Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                  Posting Date=FIELD(Date Filter),
                                                                                                                  Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Purchases (LCY);
                                                              ENG=Purchases (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 64  ;   ;Inv. Discounts (LCY);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Vendor Ledger Entry"."Inv. Discount (LCY)" WHERE (Vendor No.=FIELD(No.),
                                                                                                                       Global Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                       Global Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                       Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Inv. Discounts (LCY);
                                                              ENG=Inv. Discounts (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 65  ;   ;Pmt. Discounts (LCY);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Vendor No.=FIELD(No.),
                                                                                                                       Entry Type=FILTER(Payment Discount..'Payment Discount (VAT Adjustment)'),
                                                                                                                       Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                       Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                       Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Pmt. Discounts (LCY);
                                                              ENG=Pmt. Discounts (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 66  ;   ;Balance Due         ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Vendor No.=FIELD(No.),
                                                                                                                Posting Date=FIELD(UPPERLIMIT(Date Filter)),
                                                                                                                Initial Entry Due Date=FIELD(UPPERLIMIT(Date Filter)),
                                                                                                                Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Balance Due;
                                                              ENG=Balance Due];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 67  ;   ;Balance Due (LCY)   ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Vendor No.=FIELD(No.),
                                                                                                                        Posting Date=FIELD(UPPERLIMIT(Date Filter)),
                                                                                                                        Initial Entry Due Date=FIELD(UPPERLIMIT(Date Filter)),
                                                                                                                        Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                        Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                        Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Balance Due (LCY);
                                                              ENG=Balance Due (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 69  ;   ;Payments            ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Initial Document Type=CONST(Payment),
                                                                                                               Entry Type=CONST(Initial Entry),
                                                                                                               Vendor No.=FIELD(No.),
                                                                                                               Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                               Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                               Posting Date=FIELD(Date Filter),
                                                                                                               Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Payments;
                                                              ENG=Payments];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 70  ;   ;Invoice Amounts     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Initial Document Type=CONST(Invoice),
                                                                                                                Entry Type=CONST(Initial Entry),
                                                                                                                Vendor No.=FIELD(No.),
                                                                                                                Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                Posting Date=FIELD(Date Filter),
                                                                                                                Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Invoice Amounts;
                                                              ENG=Invoice Amounts];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 71  ;   ;Cr. Memo Amounts    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Initial Document Type=CONST(Credit Memo),
                                                                                                               Entry Type=CONST(Initial Entry),
                                                                                                               Vendor No.=FIELD(No.),
                                                                                                               Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                               Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                               Posting Date=FIELD(Date Filter),
                                                                                                               Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Cr. Memo Amounts;
                                                              ENG=Cr. Memo Amounts];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 72  ;   ;Finance Charge Memo Amounts;Decimal;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Initial Document Type=CONST(Finance Charge Memo),
                                                                                                                Entry Type=CONST(Initial Entry),
                                                                                                                Vendor No.=FIELD(No.),
                                                                                                                Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                Posting Date=FIELD(Date Filter),
                                                                                                                Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Finance Charge Memo Amounts;
                                                              ENG=Finance Charge Memo Amounts];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 74  ;   ;Payments (LCY)      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Initial Document Type=CONST(Payment),
                                                                                                                       Entry Type=CONST(Initial Entry),
                                                                                                                       Vendor No.=FIELD(No.),
                                                                                                                       Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                       Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                       Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Payments (LCY);
                                                              ENG=Payments (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 75  ;   ;Inv. Amounts (LCY)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Initial Document Type=CONST(Invoice),
                                                                                                                        Entry Type=CONST(Initial Entry),
                                                                                                                        Vendor No.=FIELD(No.),
                                                                                                                        Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                        Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                        Posting Date=FIELD(Date Filter),
                                                                                                                        Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Inv. Amounts (LCY);
                                                              ENG=Inv. Amounts (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 76  ;   ;Cr. Memo Amounts (LCY);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Initial Document Type=CONST(Credit Memo),
                                                                                                                       Entry Type=CONST(Initial Entry),
                                                                                                                       Vendor No.=FIELD(No.),
                                                                                                                       Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                       Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                       Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Cr. Memo Amounts (LCY);
                                                              ENG=Cr. Memo Amounts (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 77  ;   ;Fin. Charge Memo Amounts (LCY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Initial Document Type=CONST(Finance Charge Memo),
                                                                                                                        Entry Type=CONST(Initial Entry),
                                                                                                                        Vendor No.=FIELD(No.),
                                                                                                                        Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                        Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                        Posting Date=FIELD(Date Filter),
                                                                                                                        Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Fin. Charge Memo Amounts (LCY);
                                                              ENG=Fin. Charge Memo Amounts (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 78  ;   ;Outstanding Orders  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Amount" WHERE (Document Type=CONST(Order),
                                                                                                               Pay-to Vendor No.=FIELD(No.),
                                                                                                               Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                               Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                               Currency Code=FIELD(Currency Filter)));
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=[ENU=Outstanding Orders;
                                                              ENG=Outstanding Orders];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 79  ;   ;Amt. Rcd. Not Invoiced;Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Amt. Rcd. Not Invoiced" WHERE (Document Type=CONST(Order),
                                                                                                                   Pay-to Vendor No.=FIELD(No.),
                                                                                                                   Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                   Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                   Currency Code=FIELD(Currency Filter)));
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=[ENU=Amt. Rcd. Not Invoiced;
                                                              ENG=Amt. Rcd. Not Invoiced];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 80  ;   ;Application Method  ;Option        ;CaptionML=[ENU=Application Method;
                                                              ENG=Application Method];
                                                   OptionCaptionML=[ENU=Manual,Apply to Oldest;
                                                                    ENG=Manual,Apply to Oldest];
                                                   OptionString=Manual,Apply to Oldest }
    { 82  ;   ;Prices Including VAT;Boolean       ;OnValidate=VAR
                                                                PurchPrice@1000 : Record 7012;
                                                                Item@1001 : Record 27;
                                                                VATPostingSetup@1002 : Record 325;
                                                                Currency@1003 : Record 4;
                                                              BEGIN
                                                                PurchPrice.SETCURRENTKEY("Vendor No.");
                                                                PurchPrice.SETRANGE("Vendor No.","No.");
                                                                IF PurchPrice.FIND('-') THEN BEGIN
                                                                  IF VATPostingSetup.GET('','') THEN;
                                                                  IF CONFIRM(
                                                                       STRSUBSTNO(
                                                                         Text002,
                                                                         FIELDCAPTION("Prices Including VAT"),"Prices Including VAT",PurchPrice.TABLECAPTION),TRUE)
                                                                  THEN
                                                                    REPEAT
                                                                      IF PurchPrice."Item No." <> Item."No." THEN
                                                                        Item.GET(PurchPrice."Item No.");
                                                                      IF ("VAT Bus. Posting Group" <> VATPostingSetup."VAT Bus. Posting Group") OR
                                                                         (Item."VAT Prod. Posting Group" <> VATPostingSetup."VAT Prod. Posting Group")
                                                                      THEN
                                                                        VATPostingSetup.GET("VAT Bus. Posting Group",Item."VAT Prod. Posting Group");
                                                                      IF PurchPrice."Currency Code" = '' THEN
                                                                        Currency.InitRoundingPrecision
                                                                      ELSE
                                                                        IF PurchPrice."Currency Code" <> Currency.Code THEN
                                                                          Currency.GET(PurchPrice."Currency Code");
                                                                      IF VATPostingSetup."VAT %" <> 0 THEN BEGIN
                                                                        IF "Prices Including VAT" THEN
                                                                          PurchPrice."Direct Unit Cost" :=
                                                                            ROUND(
                                                                              PurchPrice."Direct Unit Cost" * (1 + VATPostingSetup."VAT %" / 100),
                                                                              Currency."Unit-Amount Rounding Precision")
                                                                        ELSE
                                                                          PurchPrice."Direct Unit Cost" :=
                                                                            ROUND(
                                                                              PurchPrice."Direct Unit Cost" / (1 + VATPostingSetup."VAT %" / 100),
                                                                              Currency."Unit-Amount Rounding Precision");
                                                                        PurchPrice.MODIFY;
                                                                      END;
                                                                    UNTIL PurchPrice.NEXT = 0;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Prices Including VAT;
                                                              ENG=Prices Including VAT] }
    { 84  ;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              ENG=Fax No.] }
    { 85  ;   ;Telex Answer Back   ;Text20        ;CaptionML=[ENU=Telex Answer Back;
                                                              ENG=Telex Answer Back] }
    { 86  ;   ;VAT Registration No.;Text20        ;OnValidate=VAR
                                                                VATRegNoFormat@1000 : Record 381;
                                                                VATRegistrationLogMgt@1002 : Codeunit 249;
                                                              BEGIN
                                                                IF VATRegNoFormat.Test("VAT Registration No.","Country/Region Code","No.",DATABASE::Vendor) THEN
                                                                  IF "VAT Registration No." <> xRec."VAT Registration No." THEN
                                                                    VATRegistrationLogMgt.LogVendor(Rec);
                                                              END;

                                                   CaptionML=[ENU=VAT Registration No.;
                                                              ENG=VAT Registration No.] }
    { 88  ;   ;Gen. Bus. Posting Group;Code10     ;TableRelation="Gen. Business Posting Group";
                                                   OnValidate=BEGIN
                                                                IF xRec."Gen. Bus. Posting Group" <> "Gen. Bus. Posting Group" THEN
                                                                  IF GenBusPostingGrp.ValidateVatBusPostingGroup(GenBusPostingGrp,"Gen. Bus. Posting Group") THEN
                                                                    VALIDATE("VAT Bus. Posting Group",GenBusPostingGrp."Def. VAT Bus. Posting Group");
                                                              END;

                                                   CaptionML=[ENU=Gen. Bus. Posting Group;
                                                              ENG=Gen. Bus. Posting Group] }
    { 89  ;   ;Picture             ;BLOB          ;CaptionML=[ENU=Picture;
                                                              ENG=Picture];
                                                   SubType=Bitmap }
    { 90  ;   ;GLN                 ;Code13        ;OnValidate=VAR
                                                                GLNCalculator@1000 : Codeunit 1607;
                                                              BEGIN
                                                                IF GLN <> '' THEN
                                                                  GLNCalculator.AssertValidCheckDigit13(GLN);
                                                              END;

                                                   CaptionML=[ENU=GLN;
                                                              ENG=GLN];
                                                   Numeric=Yes }
    { 91  ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   OnLookup=BEGIN

                                                              //-009
                                                              RecHandledMDM;
                                                              //+009
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=Post Code;
                                                              ENG=Postcode] }
    { 92  ;   ;County              ;Text30        ;CaptionML=[ENU=County;
                                                              ENG=County] }
    { 97  ;   ;Debit Amount        ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Debit Amount" WHERE (Vendor No.=FIELD(No.),
                                                                                                                       Entry Type=FILTER(<>Application),
                                                                                                                       Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                       Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                       Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Debit Amount;
                                                              ENG=Debit Amount];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 98  ;   ;Credit Amount       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Credit Amount" WHERE (Vendor No.=FIELD(No.),
                                                                                                                        Entry Type=FILTER(<>Application),
                                                                                                                        Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                        Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                        Posting Date=FIELD(Date Filter),
                                                                                                                        Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Credit Amount;
                                                              ENG=Credit Amount];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 99  ;   ;Debit Amount (LCY)  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Debit Amount (LCY)" WHERE (Vendor No.=FIELD(No.),
                                                                                                                             Entry Type=FILTER(<>Application),
                                                                                                                             Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                             Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                             Posting Date=FIELD(Date Filter),
                                                                                                                             Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Debit Amount (LCY);
                                                              ENG=Debit Amount (LCY)];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 100 ;   ;Credit Amount (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Credit Amount (LCY)" WHERE (Vendor No.=FIELD(No.),
                                                                                                                              Entry Type=FILTER(<>Application),
                                                                                                                              Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                              Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                              Posting Date=FIELD(Date Filter),
                                                                                                                              Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Credit Amount (LCY);
                                                              ENG=Credit Amount (LCY)];
                                                   BlankZero=Yes;
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 102 ;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=Email;
                                                              ENG=Email] }
    { 103 ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Home Page;
                                                              ENG=Home Page] }
    { 104 ;   ;Reminder Amounts    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Initial Document Type=CONST(Reminder),
                                                                                                                Entry Type=CONST(Initial Entry),
                                                                                                                Vendor No.=FIELD(No.),
                                                                                                                Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                Posting Date=FIELD(Date Filter),
                                                                                                                Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Reminder Amounts;
                                                              ENG=Reminder Amounts];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 105 ;   ;Reminder Amounts (LCY);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Initial Document Type=CONST(Reminder),
                                                                                                                        Entry Type=CONST(Initial Entry),
                                                                                                                        Vendor No.=FIELD(No.),
                                                                                                                        Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                        Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                        Posting Date=FIELD(Date Filter),
                                                                                                                        Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Reminder Amounts (LCY);
                                                              ENG=Reminder Amounts (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 107 ;   ;No. Series          ;Code10        ;TableRelation="No. Series";
                                                   CaptionML=[ENU=No. Series;
                                                              ENG=No. Series];
                                                   Editable=No }
    { 108 ;   ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   CaptionML=[ENU=Tax Area Code;
                                                              ENG=VAT Area Code] }
    { 109 ;   ;Tax Liable          ;Boolean       ;CaptionML=[ENU=Tax Liable;
                                                              ENG=VAT Liable] }
    { 110 ;   ;VAT Bus. Posting Group;Code10      ;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=VAT Bus. Posting Group;
                                                              ENG=VAT Bus. Posting Group] }
    { 111 ;   ;Currency Filter     ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation=Currency;
                                                   CaptionML=[ENU=Currency Filter;
                                                              ENG=Currency Filter] }
    { 113 ;   ;Outstanding Orders (LCY);Decimal   ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Amount (LCY)" WHERE (Document Type=CONST(Order),
                                                                                                                     Pay-to Vendor No.=FIELD(No.),
                                                                                                                     Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Currency Code=FIELD(Currency Filter)));
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=[ENU=Outstanding Orders (LCY);
                                                              ENG=Outstanding Orders (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 114 ;   ;Amt. Rcd. Not Invoiced (LCY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Amt. Rcd. Not Invoiced (LCY)" WHERE (Document Type=CONST(Order),
                                                                                                                         Pay-to Vendor No.=FIELD(No.),
                                                                                                                         Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                         Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                         Currency Code=FIELD(Currency Filter)));
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=[ENU=Amt. Rcd. Not Invoiced (LCY);
                                                              ENG=Amt. Rcd. Not Invoiced (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 116 ;   ;Block Payment Tolerance;Boolean    ;CaptionML=[ENU=Block Payment Tolerance;
                                                              ENG=Block Payment Tolerance] }
    { 117 ;   ;Pmt. Disc. Tolerance (LCY);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Vendor No.=FIELD(No.),
                                                                                                                       Entry Type=FILTER(Payment Discount Tolerance|'Payment Discount Tolerance (VAT Adjustment)'|'Payment Discount Tolerance (VAT Excl.)'),
                                                                                                                       Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                       Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                       Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Pmt. Disc. Tolerance (LCY);
                                                              ENG=Pmt. Disc. Tolerance (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 118 ;   ;Pmt. Tolerance (LCY);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Vendor No.=FIELD(No.),
                                                                                                                       Entry Type=FILTER(Payment Tolerance|'Payment Tolerance (VAT Adjustment)'|'Payment Tolerance (VAT Excl.)'),
                                                                                                                       Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                       Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                       Posting Date=FIELD(Date Filter),
                                                                                                                       Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Pmt. Tolerance (LCY);
                                                              ENG=Pmt. Tolerance (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 119 ;   ;IC Partner Code     ;Code20        ;TableRelation="IC Partner";
                                                   OnValidate=VAR
                                                                VendLedgEntry@1001 : Record 25;
                                                                AccountingPeriod@1000 : Record 10560;
                                                                ICPartner@1002 : Record 413;
                                                              BEGIN
                                                                IF xRec."IC Partner Code" <> "IC Partner Code" THEN BEGIN
                                                                  IF NOT VendLedgEntry.SETCURRENTKEY("Vendor No.",Open) THEN
                                                                    VendLedgEntry.SETCURRENTKEY("Vendor No.");
                                                                  VendLedgEntry.SETRANGE("Vendor No.","No.");
                                                                  VendLedgEntry.SETRANGE(Open,TRUE);
                                                                  IF VendLedgEntry.FINDLAST THEN
                                                                    ERROR(Text010,FIELDCAPTION("IC Partner Code"),TABLECAPTION);

                                                                  VendLedgEntry.RESET;
                                                                  VendLedgEntry.SETCURRENTKEY("Vendor No.","Posting Date");
                                                                  VendLedgEntry.SETRANGE("Vendor No.","No.");
                                                                  AccountingPeriod.SETRANGE(Closed,FALSE);
                                                                  IF AccountingPeriod.FINDFIRST THEN BEGIN
                                                                    VendLedgEntry.SETFILTER("Posting Date",'>=%1',AccountingPeriod."Period Start");
                                                                    IF VendLedgEntry.FINDFIRST THEN
                                                                      IF NOT CONFIRM(Text009,FALSE,TABLECAPTION) THEN
                                                                        "IC Partner Code" := xRec."IC Partner Code";
                                                                  END;
                                                                END;

                                                                IF "IC Partner Code" <> '' THEN BEGIN
                                                                  ICPartner.GET("IC Partner Code");
                                                                  IF (ICPartner."Vendor No." <> '') AND (ICPartner."Vendor No." <> "No.") THEN
                                                                    ERROR(Text008,FIELDCAPTION("IC Partner Code"),"IC Partner Code",TABLECAPTION,ICPartner."Vendor No.");
                                                                  ICPartner."Vendor No." := "No.";
                                                                  ICPartner.MODIFY;
                                                                END;

                                                                IF (xRec."IC Partner Code" <> "IC Partner Code") AND ICPartner.GET(xRec."IC Partner Code") THEN BEGIN
                                                                  ICPartner."Vendor No." := '';
                                                                  ICPartner.MODIFY;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=IC Partner Code;
                                                              ENG=IC Partner Code] }
    { 120 ;   ;Refunds             ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Initial Document Type=CONST(Refund),
                                                                                                                Entry Type=CONST(Initial Entry),
                                                                                                                Vendor No.=FIELD(No.),
                                                                                                                Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                Posting Date=FIELD(Date Filter),
                                                                                                                Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Refunds;
                                                              ENG=Refunds] }
    { 121 ;   ;Refunds (LCY)       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Initial Document Type=CONST(Refund),
                                                                                                                        Entry Type=CONST(Initial Entry),
                                                                                                                        Vendor No.=FIELD(No.),
                                                                                                                        Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                        Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                        Posting Date=FIELD(Date Filter),
                                                                                                                        Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Refunds (LCY);
                                                              ENG=Refunds (LCY)] }
    { 122 ;   ;Other Amounts       ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Initial Document Type=CONST(" "),
                                                                                                                Entry Type=CONST(Initial Entry),
                                                                                                                Vendor No.=FIELD(No.),
                                                                                                                Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                Posting Date=FIELD(Date Filter),
                                                                                                                Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Other Amounts;
                                                              ENG=Other Amounts] }
    { 123 ;   ;Other Amounts (LCY) ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Initial Document Type=CONST(" "),
                                                                                                                        Entry Type=CONST(Initial Entry),
                                                                                                                        Vendor No.=FIELD(No.),
                                                                                                                        Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                        Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                        Posting Date=FIELD(Date Filter),
                                                                                                                        Currency Code=FIELD(Currency Filter)));
                                                   CaptionML=[ENU=Other Amounts (LCY);
                                                              ENG=Other Amounts (LCY)] }
    { 124 ;   ;Prepayment %        ;Decimal       ;CaptionML=[ENU=Prepayment %;
                                                              ENG=Prepayment %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 125 ;   ;Outstanding Invoices;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Amount" WHERE (Document Type=CONST(Invoice),
                                                                                                               Pay-to Vendor No.=FIELD(No.),
                                                                                                               Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                               Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                               Currency Code=FIELD(Currency Filter)));
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=[ENU=Outstanding Invoices;
                                                              ENG=Outstanding Invoices];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr="Currency Code" }
    { 126 ;   ;Outstanding Invoices (LCY);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Amount (LCY)" WHERE (Document Type=CONST(Invoice),
                                                                                                                     Pay-to Vendor No.=FIELD(No.),
                                                                                                                     Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                     Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter),
                                                                                                                     Currency Code=FIELD(Currency Filter)));
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=[ENU=Outstanding Invoices (LCY);
                                                              ENG=Outstanding Invoices (LCY)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 130 ;   ;Pay-to No. Of Archived Doc.;Integer;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header Archive" WHERE (Document Type=CONST(Order),
                                                                                                      Pay-to Vendor No.=FIELD(No.)));
                                                   CaptionML=[ENU=Pay-to No. Of Archived Doc.;
                                                              ENG=Pay-to No. Of Archived Doc.] }
    { 131 ;   ;Buy-from No. Of Archived Doc.;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header Archive" WHERE (Document Type=CONST(Order),
                                                                                                      Buy-from Vendor No.=FIELD(No.)));
                                                   CaptionML=[ENU=Buy-from No. Of Archived Doc.;
                                                              ENG=Buy-from No. Of Archived Doc.] }
    { 132 ;   ;Partner Type        ;Option        ;CaptionML=[ENU=Partner Type;
                                                              ENG=Partner Type];
                                                   OptionCaptionML=[ENU=" ,Company,Person";
                                                                    ENG=" ,Company,Person"];
                                                   OptionString=[ ,Company,Person] }
    { 140 ;   ;Image               ;Media         ;ExtendedDatatype=Person;
                                                   CaptionML=[ENU=Image;
                                                              ENG=Image] }
    { 170 ;   ;Creditor No.        ;Code20        ;CaptionML=[ENU=Creditor No.;
                                                              ENG=Creditor No.];
                                                   Numeric=Yes }
    { 288 ;   ;Preferred Bank Account Code;Code10 ;TableRelation="Vendor Bank Account".Code WHERE (Vendor No.=FIELD(No.));
                                                   CaptionML=[ENU=Preferred Bank Account Code;
                                                              ENG=Preferred Bank Account Code] }
    { 840 ;   ;Cash Flow Payment Terms Code;Code10;TableRelation="Payment Terms";
                                                   CaptionML=[ENU=Cash Flow Payment Terms Code;
                                                              ENG=Cash Flow Payment Terms Code] }
    { 5049;   ;Primary Contact No. ;Code20        ;TableRelation=Contact;
                                                   OnValidate=VAR
                                                                Cont@1001 : Record 5050;
                                                                ContBusRel@1000 : Record 5054;
                                                              BEGIN
                                                                Contact := '';
                                                                IF "Primary Contact No." <> '' THEN BEGIN
                                                                  Cont.GET("Primary Contact No.");

                                                                  ContBusRel.SETCURRENTKEY("Link to Table","No.");
                                                                  ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Vendor);
                                                                  ContBusRel.SETRANGE("No.","No.");
                                                                  ContBusRel.FINDFIRST;

                                                                  IF Cont."Company No." <> ContBusRel."Contact No." THEN
                                                                    ERROR(Text004,Cont."No.",Cont.Name,"No.",Name);

                                                                  IF Cont.Type = Cont.Type::Person THEN
                                                                    Contact := Cont.Name
                                                                END;
                                                              END;

                                                   OnLookup=VAR
                                                              Cont@1001 : Record 5050;
                                                              ContBusRel@1000 : Record 5054;
                                                              TempVend@1002 : TEMPORARY Record 23;
                                                            BEGIN
                                                              ContBusRel.SETCURRENTKEY("Link to Table","No.");
                                                              ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Vendor);
                                                              ContBusRel.SETRANGE("No.","No.");
                                                              IF ContBusRel.FINDFIRST THEN
                                                                Cont.SETRANGE("Company No.",ContBusRel."Contact No.")
                                                              ELSE
                                                                Cont.SETRANGE("No.",'');

                                                              IF "Primary Contact No." <> '' THEN
                                                                IF Cont.GET("Primary Contact No.") THEN ;
                                                              IF PAGE.RUNMODAL(0,Cont) = ACTION::LookupOK THEN BEGIN
                                                                TempVend.COPY(Rec);
                                                                FIND;
                                                                TRANSFERFIELDS(TempVend,FALSE);
                                                                VALIDATE("Primary Contact No.",Cont."No.");
                                                              END;
                                                            END;

                                                   CaptionML=[ENU=Primary Contact No.;
                                                              ENG=Primary Contact No.] }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center";
                                                   CaptionML=[ENU=Responsibility Center;
                                                              ENG=Responsibility Centre] }
    { 5701;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[ENU=Location Code;
                                                              ENG=Location Code] }
    { 5790;   ;Lead Time Calculation;DateFormula  ;OnValidate=BEGIN
                                                                LeadTimeMgt.CheckLeadTimeIsNotNegative("Lead Time Calculation");
                                                              END;

                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=[ENU=Lead Time Calculation;
                                                              ENG=Lead Time Calculation] }
    { 7177;   ;No. of Pstd. Receipts;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purch. Rcpt. Header" WHERE (Buy-from Vendor No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Pstd. Receipts;
                                                              ENG=No. of Pstd. Receipts];
                                                   Editable=No }
    { 7178;   ;No. of Pstd. Invoices;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purch. Inv. Header" WHERE (Buy-from Vendor No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Pstd. Invoices;
                                                              ENG=No. of Pstd. Invoices];
                                                   Editable=No }
    { 7179;   ;No. of Pstd. Return Shipments;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Return Shipment Header" WHERE (Buy-from Vendor No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Pstd. Return Shipments;
                                                              ENG=No. of Pstd. Return Shipments];
                                                   Editable=No }
    { 7180;   ;No. of Pstd. Credit Memos;Integer  ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purch. Cr. Memo Hdr." WHERE (Buy-from Vendor No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Pstd. Credit Memos;
                                                              ENG=No. of Pstd. Credit Memos];
                                                   Editable=No }
    { 7181;   ;Pay-to No. of Orders;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE (Document Type=CONST(Order),
                                                                                              Pay-to Vendor No.=FIELD(No.)));
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=[ENU=Pay-to No. of Orders;
                                                              ENG=Pay-to No. of Orders];
                                                   Editable=No }
    { 7182;   ;Pay-to No. of Invoices;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE (Document Type=CONST(Invoice),
                                                                                              Pay-to Vendor No.=FIELD(No.)));
                                                   CaptionML=[ENU=Pay-to No. of Invoices;
                                                              ENG=Pay-to No. of Invoices];
                                                   Editable=No }
    { 7183;   ;Pay-to No. of Return Orders;Integer;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE (Document Type=CONST(Return Order),
                                                                                              Pay-to Vendor No.=FIELD(No.)));
                                                   AccessByPermission=TableData 6650=R;
                                                   CaptionML=[ENU=Pay-to No. of Return Orders;
                                                              ENG=Pay-to No. of Return Orders];
                                                   Editable=No }
    { 7184;   ;Pay-to No. of Credit Memos;Integer ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE (Document Type=CONST(Credit Memo),
                                                                                              Pay-to Vendor No.=FIELD(No.)));
                                                   CaptionML=[ENU=Pay-to No. of Credit Memos;
                                                              ENG=Pay-to No. of Credit Memos];
                                                   Editable=No }
    { 7185;   ;Pay-to No. of Pstd. Receipts;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Purch. Rcpt. Header" WHERE (Pay-to Vendor No.=FIELD(No.)));
                                                   CaptionML=[ENU=Pay-to No. of Pstd. Receipts;
                                                              ENG=Pay-to No. of Pstd. Receipts];
                                                   Editable=No }
    { 7186;   ;Pay-to No. of Pstd. Invoices;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Purch. Inv. Header" WHERE (Pay-to Vendor No.=FIELD(No.)));
                                                   CaptionML=[ENU=Pay-to No. of Pstd. Invoices;
                                                              ENG=Pay-to No. of Pstd. Invoices];
                                                   Editable=No }
    { 7187;   ;Pay-to No. of Pstd. Return S.;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Return Shipment Header" WHERE (Pay-to Vendor No.=FIELD(No.)));
                                                   CaptionML=[ENU=Pay-to No. of Pstd. Return S.;
                                                              ENG=Pay-to No. of Pstd. Return S.];
                                                   Editable=No }
    { 7188;   ;Pay-to No. of Pstd. Cr. Memos;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Purch. Cr. Memo Hdr." WHERE (Pay-to Vendor No.=FIELD(No.)));
                                                   CaptionML=[ENU=Pay-to No. of Pstd. Cr. Memos;
                                                              ENG=Pay-to No. of Pstd. Cr. Memos];
                                                   Editable=No }
    { 7189;   ;No. of Quotes       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE (Document Type=CONST(Quote),
                                                                                              Buy-from Vendor No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Quotes;
                                                              ENG=No. of Quotes];
                                                   Editable=No }
    { 7190;   ;No. of Blanket Orders;Integer      ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE (Document Type=CONST(Blanket Order),
                                                                                              Buy-from Vendor No.=FIELD(No.)));
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=[ENU=No. of Blanket Orders;
                                                              ENG=No. of Blanket Orders];
                                                   Editable=No }
    { 7191;   ;No. of Orders       ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE (Document Type=CONST(Order),
                                                                                              Buy-from Vendor No.=FIELD(No.)));
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=[ENU=No. of Orders;
                                                              ENG=No. of Orders] }
    { 7192;   ;No. of Invoices     ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE (Document Type=CONST(Invoice),
                                                                                              Buy-from Vendor No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Invoices;
                                                              ENG=No. of Invoices];
                                                   Editable=No }
    { 7193;   ;No. of Return Orders;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE (Document Type=CONST(Return Order),
                                                                                              Buy-from Vendor No.=FIELD(No.)));
                                                   AccessByPermission=TableData 6650=R;
                                                   CaptionML=[ENU=No. of Return Orders;
                                                              ENG=No. of Return Orders];
                                                   Editable=No }
    { 7194;   ;No. of Credit Memos ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE (Document Type=CONST(Credit Memo),
                                                                                              Buy-from Vendor No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Credit Memos;
                                                              ENG=No. of Credit Memos];
                                                   Editable=No }
    { 7195;   ;No. of Order Addresses;Integer     ;FieldClass=FlowField;
                                                   CalcFormula=Count("Order Address" WHERE (Vendor No.=FIELD(No.)));
                                                   CaptionML=[ENU=No. of Order Addresses;
                                                              ENG=No. of Order Addresses];
                                                   Editable=No }
    { 7196;   ;Pay-to No. of Quotes;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE (Document Type=CONST(Quote),
                                                                                              Pay-to Vendor No.=FIELD(No.)));
                                                   CaptionML=[ENU=Pay-to No. of Quotes;
                                                              ENG=Pay-to No. of Quotes];
                                                   Editable=No }
    { 7197;   ;Pay-to No. of Blanket Orders;Integer;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Count("Purchase Header" WHERE (Document Type=CONST(Blanket Order),
                                                                                              Pay-to Vendor No.=FIELD(No.)));
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=[ENU=Pay-to No. of Blanket Orders;
                                                              ENG=Pay-to No. of Blanket Orders] }
    { 7600;   ;Base Calendar Code  ;Code10        ;TableRelation="Base Calendar";
                                                   CaptionML=[ENU=Base Calendar Code;
                                                              ENG=Base Calendar Code] }
    { 7601;   ;Document Sending Profile;Code20    ;TableRelation="Document Sending Profile".Code;
                                                   CaptionML=[ENU=Document Sending Profile;
                                                              ENG=Document Sending Profile] }
    { 8000;   ;Id                  ;GUID          ;CaptionML=[ENU=Id;
                                                              ENG=Id] }
    { 10500;  ;Type of Supply Code ;Code10        ;TableRelation="Type of Supply";
                                                   CaptionML=[ENU=Type of Supply Code;
                                                              ENG=Type of Supply Code] }
    { 10550;  ;BACS Account No.    ;Code10        ;TableRelation="Vendor Bank Account".Code WHERE (Vendor No.=FIELD(No.));
                                                   CaptionML=[ENU=BACS Account No.;
                                                              ENG=BACS Account No.] }
    { 50001;  ;Procurement Comments;Text100       ;OnValidate=VAR
                                                                NADIAAudit@1000000000 : Codeunit 60803;
                                                              BEGIN
                                                                NADIAAudit.AddVendorAudit(Rec,
                                                                                          23,
                                                                                          50001,
                                                                                          xRec."Procurement Comments",
                                                                                          "Procurement Comments",
                                                                                          1,                            //0=Ins, 2=Mod, 3=Del
                                                                                          'Vendor record modified',
                                                                                          '');
                                                              END;

                                                   Description=001 Field created }
    { 50003;  ;Address State       ;Text30        ;Description=008 Field created }
    { 50005;  ;Phone Country Code  ;Text4         ;OnValidate=BEGIN
                                                                "Phone No." := "Phone Country Code" +' '+ "Phone City Code" +' '+ "Phone Actual"
                                                              END;

                                                   Description=001 Field created }
    { 50006;  ;Phone City Code     ;Text13        ;OnValidate=BEGIN
                                                                "Phone No." := "Phone Country Code" +' '+ "Phone City Code" +' '+ "Phone Actual"
                                                              END;

                                                   Description=001 Field created }
    { 50007;  ;Phone Actual        ;Text13        ;OnValidate=BEGIN
                                                                "Phone No." := "Phone Country Code" +' '+ "Phone City Code" +' '+ "Phone Actual"
                                                              END;

                                                   Description=001 Field created }
    { 50008;  ;Fax Country Code    ;Text4         ;OnValidate=BEGIN
                                                                "Fax No." := "Fax Country Code" +' '+ "Fax City Code" +' '+ "Fax Actual";
                                                              END;

                                                   Description=001 Field created }
    { 50009;  ;Fax City Code       ;Text13        ;OnValidate=BEGIN
                                                                "Fax No." := "Fax Country Code" +' '+ "Fax City Code" +' '+ "Fax Actual";
                                                              END;

                                                   Description=001 Field created }
    { 50010;  ;Fax Actual          ;Text13        ;OnValidate=BEGIN
                                                                "Fax No." := "Fax Country Code" +' '+ "Fax City Code" +' '+ "Fax Actual";
                                                              END;

                                                   Description=001 Field created }
    { 50016;  ;E-Mail Size Limit (Kb);Integer     ;Description=001 Field created }
    { 50027;  ;Parent Company Name ;Text50        ;Description=001 Field created;
                                                   Editable=No }
    { 50028;  ;Parent Company      ;Code20        ;TableRelation=Vendor.No.;
                                                   OnValidate=VAR
                                                                locVendor@1000000000 : Record 23;
                                                              BEGIN
                                                                IF "Parent Company" <> xRec."Parent Company" THEN
                                                                BEGIN
                                                                   IF "Parent Company" = '' THEN
                                                                      "Parent Company Name" := ''
                                                                   ELSE BEGIN
                                                                       IF locVendor.GET("Parent Company") THEN
                                                                          "Parent Company Name" := locVendor.Name;
                                                                   END;
                                                                END;
                                                              END;

                                                   Description=001 Field created }
    { 50029;  ;Exported to Sun     ;Date          ;Description=001 Field created;
                                                   Editable=No }
    { 50030;  ;Exported to Sun by  ;Code40        ;TableRelation=Resource;
                                                   NotBlank=No;
                                                   Description=001 Field created }
    { 50031;  ;Exported to Sun by Username;Text50 ;FieldClass=FlowField;
                                                   CalcFormula=Lookup(Resource.Name WHERE (No.=FIELD(Exported to Sun by)));
                                                   Description=001 Field created;
                                                   Editable=No }
    { 50032;  ;Export to Files     ;Text30        ;Description=001 Field created }
    { 50034;  ;Blocked Reason      ;Text60        ;Description=001 Field created }
    { 50035;  ;Quality Audit Report No.;Text50    ;Description=001 Field created }
    { 50036;  ;Audit Date          ;Date          ;Description=001 Field created }
    { 50037;  ;Qualification Questionnaire;Boolean;Description=001 Field created }
    { 50038;  ;Sup. Con. Qualification Record;Boolean;
                                                   Description=001 Field created }
    { 50039;  ;Date Reviewed       ;Date          ;Description=001 Field created }
    { 50040;  ;Accredited QMS      ;Boolean       ;Description=001 Field created }
    { 50041;  ;Date of Accredition Expiry;Date    ;Description=001 Field created }
    { 50042;  ;Approved For Crit Level Equip.;Option;
                                                   OptionString=[ ,A,B,C,D];
                                                   Description=001 Field created }
    { 50043;  ;Last Modified By GUID;Code40       ;Description=001 Field created }
    { 50044;  ;Last Modified Date  ;Date          ;Description=001 Field created }
    { 50045;  ;Last Modified Time  ;Time          ;Description=001 Field created }
    { 50046;  ;Approved Supplier   ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Vendor Product Combinations" WHERE (Vendor No.=FIELD(No.),
                                                                                                          Qualification Status=FILTER(Qualified)));
                                                   Description=001 Field created;
                                                   Editable=No }
    { 50047;  ;ACC Only            ;Boolean       ;Description=001 Field created;
                                                   Editable=Yes }
    { 50048;  ;Contact Class       ;Code20        ;Description=001 Field created;
                                                   Editable=No }
    { 50049;  ;Exists In VRM       ;Boolean       ;Description=008 Field created }
    { 50050;  ;Product ID Filter   ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Item.No.;
                                                   Description=001 Field created }
    { 50051;  ;VPC Status          ;Option        ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Vendor Product Combinations".Status WHERE (Vendor No.=FIELD(No.),
                                                                                                                  Product ID=FIELD(FILTER(Product ID Filter))));
                                                   OptionString=Prospect,Project,Disqualified;
                                                   Description=001 Field created;
                                                   Editable=No }
    { 50052;  ;Certification Required ?;Option    ;OptionString=No,Yes;
                                                   Description=001 Field created }
    { 50053;  ;Type of Supplier    ;Option        ;OnValidate=BEGIN
                                                                //-004
                                                                IF (xRec."Type of Supplier" > 0) AND ("Type of Supplier" = 0) THEN
                                                                  ERROR('Blank is not a valid value for the %1',FIELDCAPTION("Type of Supplier"));
                                                                //+004
                                                              END;

                                                   OptionString=[ ,Standard,Other];
                                                   BlankZero=Yes }
    { 50056;  ;Supply Chain Charter Signed;Boolean }
    { 50057;  ;Signed On           ;Date           }
    { 50058;  ;Supply Chain Charter File;Text100   }
    { 50100;  ;MDM ID              ;Text30        ;Description=008 Field Created;
                                                   Editable=No }
    { 50101;  ;Golden Status       ;Option        ;OptionCaptionML=[ENU=Not Golden,Golden Reference;
                                                                    ENG=Not Golden,Golden Reference];
                                                   OptionString=Not Golden,Golden Reference;
                                                   Description=008 Field Created;
                                                   Editable=No }
    { 50102;  ;Visibility Status   ;Option        ;OptionCaptionML=[ENU=Archived,Visible;
                                                                    ENG=Archived,Visible];
                                                   OptionString=Archived,Visible;
                                                   Description=008 Field Created;
                                                   Editable=No }
    { 60892;  ;Sync. Source Site   ;Code10        ;Description=001 Field created;
                                                   Editable=No }
    { 60893;  ;Insert Incomplete   ;Boolean       ;Description=001 Field created }
    { 60894;  ;Synchronisation Date;Date          ;Description=001 Field created;
                                                   Editable=No }
    { 60895;  ;Synchronisation Time;Text12        ;Description=001 Field created;
                                                   Editable=No }
    { 60896;  ;Sync. User ID       ;Code80        ;TableRelation=User;
                                                   OnLookup=VAR
                                                              "**COSL**"@1000000001 : Integer;
                                                              LoginMgt@1000000000 : Codeunit 418;
                                                            BEGIN
                                                              LoginMgt.LookupUserID("Sync. User ID");
                                                            END;

                                                   Description=001 Field created;
                                                   Editable=No }
    { 60897;  ;UTC Sync. Date      ;Date          ;Description=001 Field created;
                                                   Editable=No }
    { 60898;  ;UTC Sync. Time      ;Text12        ;Description=001 Field created;
                                                   Editable=No }
    { 60899;  ;Synchronisation Process;Boolean    ;Description=001 Field created;
                                                   Editable=No }
    { 60900;  ;Rating              ;Option        ;OptionString=Not Rated,Unacceptable,Mediocre,Adequate,Good,Excellent;
                                                   Description=001 Field created }
    { 60901;  ;Last Purchase Order Date;Date      ;FieldClass=FlowField;
                                                   CalcFormula=Max("COSL Purchase Header"."Order Date" WHERE (Buy-from Vendor No.=FIELD(No.),
                                                                                                              Document Type=CONST(Order)));
                                                   Description=001 Field created;
                                                   Editable=No }
    { 60902;  ;Rated Purchase Order's;Boolean     ;FieldClass=FlowField;
                                                   CalcFormula=Exist("PO Rating" WHERE (Buy-From Vendor No.=FIELD(No.)));
                                                   Description=001 Field created;
                                                   Editable=No }
    { 60903;  ;Type                ;Option        ;OptionString=Vendor,Certification Authority;
                                                   Description=001 Field created }
    { 60904;  ;Vendor Contact Type ;Code10        ;Description=001 Field created;
                                                   Editable=No }
    { 60905;  ;Purchase order No.  ;Code10        ;Description=PTA Created }
  }
  KEYS
  {
    {    ;No.                                     ;Clustered=Yes }
    {    ;Search Name                              }
    {    ;Vendor Posting Group                     }
    {    ;Currency Code                            }
    {    ;Priority                                 }
    {    ;Country/Region Code                      }
    {    ;Gen. Bus. Posting Group                  }
    {    ;VAT Registration No.                     }
    {    ;Name                                     }
    {    ;City                                     }
    {    ;Post Code                                }
    {    ;Phone No.                                }
    {    ;Contact                                  }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;No.,Name,City,Post Code,Phone No.,Contact }
    { 2   ;Brick               ;No.,Name,Balance (LCY),Contact,Balance Due (LCY),Image }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=You cannot delete %1 %2 because there is at least one outstanding Purchase %3 for this vendor.;ENG=You cannot delete %1 %2 because there is at least one outstanding Purchase %3 for this vendor.';
      Text002@1001 : TextConst 'ENU=You have set %1 to %2. Do you want to update the %3 price list accordingly?;ENG=You have set %1 to %2. Do you want to update the %3 price list accordingly?';
      Text003@1002 : TextConst 'ENU=Do you wish to create a contact for %1 %2?;ENG=Do you wish to create a contact for %1 %2?';
      PurchSetup@1003 : Record 312;
      CommentLine@1005 : Record 97;
      PostCode@1007 : Record 225;
      VendBankAcc@1008 : Record 288;
      OrderAddr@1009 : Record 224;
      GenBusPostingGrp@1010 : Record 250;
      ItemCrossReference@1016 : Record 5717;
      RMSetup@1020 : Record 5079;
      ServiceItem@1024 : Record 5940;
      NoSeriesMgt@1011 : Codeunit 396;
      MoveEntries@1012 : Codeunit 361;
      UpdateContFromVend@1013 : Codeunit 5057;
      DimMgt@1014 : Codeunit 408;
      LeadTimeMgt@1006 : Codeunit 5404;
      ApprovalsMgmt@1028 : Codeunit 1535;
      InsertFromContact@1015 : Boolean;
      Text004@1019 : TextConst 'ENU=Contact %1 %2 is not related to vendor %3 %4.;ENG=Contact %1 %2 is not related to vendor %3 %4.';
      Text005@1021 : TextConst 'ENU=post;ENG=post';
      Text006@1022 : TextConst 'ENU=create;ENG=create';
      Text007@1023 : TextConst 'ENU=You cannot %1 this type of document when Vendor %2 is blocked with type %3;ENG=You cannot %1 this type of document when Vendor %2 is blocked with type %3';
      Text008@1025 : TextConst 'ENU=The %1 %2 has been assigned to %3 %4.\The same %1 cannot be entered on more than one %3.;ENG=The %1 %2 has been assigned to %3 %4.\The same %1 cannot be entered on more than one %3.';
      Text009@1027 : TextConst 'ENU=Reconciling IC transactions may be difficult if you change IC Partner Code because this %1 has ledger entries in a fiscal year that has not yet been closed.\ Do you still want to change the IC Partner Code?;ENG=Reconciling IC transactions may be difficult if you change IC Partner Code because this %1 has ledger entries in a fiscal year that has not yet been closed.\ Do you still want to change the IC Partner Code?';
      Text010@1026 : TextConst 'ENU=You cannot change the contents of the %1 field because this %2 has one or more open ledger entries.;ENG=You cannot change the contents of the %1 field because this %2 has one or more open ledger entries.';
      Text011@1004 : TextConst 'ENU=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.;ENG=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.';
      SelectVendorErr@1017 : TextConst 'ENU=You must select an existing vendor.;ENG=You must select an existing vendor.';
      CreateNewVendTxt@1129 : TextConst '@@@="%1 is the name to be used to create the customer. ";ENU=Create a new vendor card for %1.;ENG=Create a new vendor card for %1.';
      VendNotRegisteredTxt@1128 : TextConst 'ENU=This vendor is not registered. To continue, choose one of the following options:;ENG=This vendor is not registered. To continue, choose one of the following options:';
      SelectVendTxt@1118 : TextConst 'ENU=Select an existing vendor.;ENG=Select an existing vendor.';
      InsertFromTemplate@1018 : Boolean;
      gFileMan@1000000001 : Codeunit 419;
      gCommonDialogMan@1000000000 : Codeunit 412;

    PROCEDURE AssistEdit@2(OldVend@1000 : Record 23) : Boolean;
    VAR
      Vend@1001 : Record 23;
    BEGIN
      WITH Vend DO BEGIN
        Vend := Rec;
        PurchSetup.GET;
        PurchSetup.TESTFIELD("Vendor Nos.");
        IF NoSeriesMgt.SelectSeries(PurchSetup."Vendor Nos.",OldVend."No. Series","No. Series") THEN BEGIN
          PurchSetup.GET;
          PurchSetup.TESTFIELD("Vendor Nos.");
          NoSeriesMgt.SetSeries("No.");
          Rec := Vend;
          EXIT(TRUE);
        END;
      END;
    END;

    LOCAL PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::Vendor,"No.",FieldNumber,ShortcutDimCode);
      MODIFY;
    END;

    PROCEDURE ShowContact@1();
    VAR
      ContBusRel@1000 : Record 5054;
      Cont@1001 : Record 5050;
      OfficeContact@1003 : Record 5050;
      OfficeMgt@1002 : Codeunit 1630;
    BEGIN
      IF OfficeMgt.GetContact(OfficeContact,"No.") AND (OfficeContact.COUNT = 1) THEN
        PAGE.RUN(PAGE::"Contact Card",OfficeContact)
      ELSE BEGIN
        IF "No." = '' THEN
          EXIT;

        ContBusRel.SETCURRENTKEY("Link to Table","No.");
        ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Vendor);
        ContBusRel.SETRANGE("No.","No.");
        IF NOT ContBusRel.FINDFIRST THEN BEGIN
          IF NOT CONFIRM(Text003,FALSE,TABLECAPTION,"No.") THEN
            EXIT;
          UpdateContFromVend.InsertNewContact(Rec,FALSE);
          ContBusRel.FINDFIRST;
        END;
        COMMIT;

        Cont.SETCURRENTKEY("Company Name","Company No.",Type,Name);
        Cont.SETRANGE("Company No.",ContBusRel."Contact No.");
        PAGE.RUN(PAGE::"Contact List",Cont);
      END;
    END;

    PROCEDURE SetInsertFromContact@3(FromContact@1000 : Boolean);
    BEGIN
      InsertFromContact := FromContact;
    END;

    PROCEDURE CheckBlockedVendOnDocs@4(Vend2@1003 : Record 23;Transaction@1000 : Boolean);
    BEGIN
      IF Vend2.Blocked = Vend2.Blocked::All THEN
        VendBlockedErrorMessage(Vend2,Transaction);
    END;

    PROCEDURE CheckBlockedVendOnJnls@5(Vend2@1005 : Record 23;DocType@1004 : ' ,Payment,Invoice,Credit Memo,Finance Charge Memo,Reminder,Refund';Transaction@1003 : Boolean);
    BEGIN
      WITH Vend2 DO BEGIN
        IF (Blocked = Blocked::All) OR
           (Blocked = Blocked::Payment) AND (DocType = DocType::Payment)
        THEN
          VendBlockedErrorMessage(Vend2,Transaction);
      END;
    END;

    PROCEDURE CreateAndShowNewInvoice@21();
    VAR
      PurchaseHeader@1000 : Record 38;
    BEGIN
      PurchaseHeader."Document Type" := PurchaseHeader."Document Type"::Invoice;
      PurchaseHeader.SETRANGE("Buy-from Vendor No.","No.");
      PurchaseHeader.INSERT(TRUE);
      COMMIT;
      PAGE.RUN(PAGE::"Purchase Invoice",PurchaseHeader)
    END;

    PROCEDURE CreateAndShowNewCreditMemo@22();
    VAR
      PurchaseHeader@1000 : Record 38;
    BEGIN
      PurchaseHeader."Document Type" := PurchaseHeader."Document Type"::"Credit Memo";
      PurchaseHeader.SETRANGE("Buy-from Vendor No.","No.");
      PurchaseHeader.INSERT(TRUE);
      COMMIT;
      PAGE.RUN(PAGE::"Purchase Credit Memo",PurchaseHeader)
    END;

    PROCEDURE CreateAndShowNewPurchaseOrder@12();
    VAR
      PurchaseHeader@1000 : Record 38;
    BEGIN
      PurchaseHeader."Document Type" := PurchaseHeader."Document Type"::Order;
      PurchaseHeader.SETRANGE("Buy-from Vendor No.","No.");
      PurchaseHeader.INSERT(TRUE);
      COMMIT;
      PAGE.RUN(PAGE::"Purchase Order",PurchaseHeader);
    END;

    PROCEDURE VendBlockedErrorMessage@6(Vend2@1001 : Record 23;Transaction@1002 : Boolean);
    VAR
      Action@1000 : Text[30];
    BEGIN
      IF Transaction THEN
        Action := Text005
      ELSE
        Action := Text006;
      ERROR(Text007,Action,Vend2."No.",Vend2.Blocked);
    END;

    PROCEDURE DisplayMap@7();
    VAR
      MapPoint@1001 : Record 800;
      MapMgt@1000 : Codeunit 802;
    BEGIN
      IF MapPoint.FINDFIRST THEN
        MapMgt.MakeSelection(DATABASE::Vendor,GETPOSITION)
      ELSE
        MESSAGE(Text011);
    END;

    PROCEDURE CalcOverDueBalance@8() OverDueBalance : Decimal;
    VAR
      VendLedgEntryRemainAmtQuery@1001 : Query 25 SECURITYFILTERING(Filtered);
    BEGIN
      VendLedgEntryRemainAmtQuery.SETRANGE(Vendor_No,"No.");
      VendLedgEntryRemainAmtQuery.SETRANGE(IsOpen,TRUE);
      VendLedgEntryRemainAmtQuery.SETFILTER(Due_Date,'<%1',WORKDATE);
      VendLedgEntryRemainAmtQuery.OPEN;

      IF VendLedgEntryRemainAmtQuery.READ THEN
        OverDueBalance := -VendLedgEntryRemainAmtQuery.Sum_Remaining_Amt_LCY;
    END;

    PROCEDURE GetInvoicedPrepmtAmountLCY@18() : Decimal;
    VAR
      PurchLine@1000 : Record 39;
    BEGIN
      PurchLine.SETCURRENTKEY("Document Type","Pay-to Vendor No.");
      PurchLine.SETRANGE("Document Type",PurchLine."Document Type"::Order);
      PurchLine.SETRANGE("Pay-to Vendor No.","No.");
      PurchLine.CALCSUMS("Prepmt. Amount Inv. (LCY)","Prepmt. VAT Amount Inv. (LCY)");
      EXIT(PurchLine."Prepmt. Amount Inv. (LCY)" + PurchLine."Prepmt. VAT Amount Inv. (LCY)");
    END;

    PROCEDURE GetTotalAmountLCY@10() : Decimal;
    BEGIN
      CALCFIELDS(
        "Balance (LCY)","Outstanding Orders (LCY)","Amt. Rcd. Not Invoiced (LCY)","Outstanding Invoices (LCY)");

      EXIT(
        "Balance (LCY)" + "Outstanding Orders (LCY)" +
        "Amt. Rcd. Not Invoiced (LCY)" + "Outstanding Invoices (LCY)" - GetInvoicedPrepmtAmountLCY);
    END;

    PROCEDURE HasAddress@25() : Boolean;
    BEGIN
      CASE TRUE OF
        Address <> '':
          EXIT(TRUE);
        "Address 2" <> '':
          EXIT(TRUE);
        City <> '':
          EXIT(TRUE);
        "Country/Region Code" <> '':
          EXIT(TRUE);
        County <> '':
          EXIT(TRUE);
        "Post Code" <> '':
          EXIT(TRUE);
        Contact <> '':
          EXIT(TRUE);
      END;

      EXIT(FALSE);
    END;

    PROCEDURE GetVendorNo@56(VendorText@1000 : Text[50]) : Code[20];
    VAR
      Vendor@1001 : Record 23;
      VendorNo@1002 : Code[20];
      NoFiltersApplied@1007 : Boolean;
      VendorWithoutQuote@1003 : Text;
      VendorFilterFromStart@1004 : Text;
      VendorFilterContains@1005 : Text;
    BEGIN
      IF VendorText = '' THEN
        EXIT('');

      IF STRLEN(VendorText) <= MAXSTRLEN(Vendor."No.") THEN
        IF Vendor.GET(VendorText) THEN
          EXIT(Vendor."No.");

      VendorWithoutQuote := CONVERTSTR(VendorText,'''','?');

      Vendor.SETFILTER(Name,'''@' + VendorWithoutQuote + '''');
      IF Vendor.FINDFIRST THEN
        EXIT(Vendor."No.");
      Vendor.SETRANGE(Name);

      VendorFilterFromStart := '''@' + VendorWithoutQuote + '*''';

      Vendor.FILTERGROUP := -1;
      Vendor.SETFILTER("No.",VendorFilterFromStart);
      Vendor.SETFILTER(Name,VendorFilterFromStart);
      IF Vendor.FINDFIRST THEN
        EXIT(Vendor."No.");

      VendorFilterContains := '''@*' + VendorWithoutQuote + '*''';

      Vendor.SETFILTER("No.",VendorFilterContains);
      Vendor.SETFILTER(Name,VendorFilterContains);
      Vendor.SETFILTER(City,VendorFilterContains);
      Vendor.SETFILTER(Contact,VendorFilterContains);
      Vendor.SETFILTER("Phone No.",VendorFilterContains);
      Vendor.SETFILTER("Post Code",VendorFilterContains);

      IF Vendor.COUNT = 0 THEN
        MarkVendorsWithSimilarName(Vendor,VendorText);

      IF Vendor.COUNT = 1 THEN BEGIN
        Vendor.FINDFIRST;
        EXIT(Vendor."No.");
      END;

      IF NOT GUIALLOWED THEN
        ERROR(SelectVendorErr);

      IF Vendor.COUNT = 0 THEN BEGIN
        IF Vendor.WRITEPERMISSION THEN
          CASE STRMENU(STRSUBSTNO('%1,%2',STRSUBSTNO(CreateNewVendTxt,VendorText),SelectVendTxt),1,VendNotRegisteredTxt) OF
            0:
              ERROR(SelectVendorErr);
            1:
              EXIT(CreateNewVendor(COPYSTR(VendorText,1,MAXSTRLEN(Vendor.Name))));
          END;
        Vendor.RESET;
        NoFiltersApplied := TRUE;
      END;

      VendorNo := PickVendor(Vendor,NoFiltersApplied);
      IF VendorNo <> '' THEN
        EXIT(VendorNo);

      ERROR(SelectVendorErr);
    END;

    LOCAL PROCEDURE MarkVendorsWithSimilarName@33(VAR Vendor@1001 : Record 23;VendorText@1000 : Text);
    VAR
      TypeHelper@1002 : Codeunit 10;
      VendorCount@1003 : Integer;
      VendorTextLenght@1004 : Integer;
      Treshold@1005 : Integer;
    BEGIN
      IF VendorText = '' THEN
        EXIT;
      IF STRLEN(VendorText) > MAXSTRLEN(Vendor.Name) THEN
        EXIT;
      VendorTextLenght := STRLEN(VendorText);
      Treshold := VendorTextLenght DIV 5;
      IF Treshold = 0 THEN
        EXIT;
      Vendor.RESET;
      Vendor.ASCENDING(FALSE); // most likely to search for newest Vendors
      IF Vendor.FINDSET THEN
        REPEAT
          VendorCount += 1;
          IF ABS(VendorTextLenght - STRLEN(Vendor.Name)) <= Treshold THEN
            IF TypeHelper.TextDistance(UPPERCASE(VendorText),UPPERCASE(Vendor.Name)) <= Treshold THEN
              Vendor.MARK(TRUE);
        UNTIL Vendor.MARK OR (Vendor.NEXT = 0) OR (VendorCount > 1000);
      Vendor.MARKEDONLY(TRUE);
    END;

    LOCAL PROCEDURE CreateNewVendor@59(VendorName@1000 : Text[50]) : Code[20];
    VAR
      Vendor@1005 : Record 23;
      MiniVendorTemplate@1006 : Record 1303;
      VendorCard@1002 : Page 26;
    BEGIN
      IF NOT MiniVendorTemplate.NewVendorFromTemplate(Vendor) THEN
        ERROR(SelectVendorErr);

      Vendor.Name := VendorName;
      Vendor.MODIFY(TRUE);
      COMMIT;
      Vendor.SETRANGE("No.",Vendor."No.");
      VendorCard.SETTABLEVIEW(Vendor);
      IF NOT (VendorCard.RUNMODAL = ACTION::OK) THEN
        ERROR(SelectVendorErr);

      EXIT(Vendor."No.");
    END;

    LOCAL PROCEDURE PickVendor@58(VAR Vendor@1000 : Record 23;NoFiltersApplied@1002 : Boolean) : Code[20];
    VAR
      VendorList@1001 : Page 27;
    BEGIN
      IF NOT NoFiltersApplied THEN
        MarkVendorsByFilters(Vendor);

      VendorList.SETTABLEVIEW(Vendor);
      VendorList.SETRECORD(Vendor);
      VendorList.LOOKUPMODE := TRUE;
      IF VendorList.RUNMODAL = ACTION::LookupOK THEN
        VendorList.GETRECORD(Vendor)
      ELSE
        CLEAR(Vendor);

      EXIT(Vendor."No.");
    END;

    LOCAL PROCEDURE MarkVendorsByFilters@20(VAR Vendor@1000 : Record 23);
    BEGIN
      IF Vendor.FINDSET THEN
        REPEAT
          Vendor.MARK(TRUE);
        UNTIL Vendor.NEXT = 0;
      IF Vendor.FINDFIRST THEN;
      Vendor.MARKEDONLY := TRUE;
    END;

    PROCEDURE OpenVendorLedgerEntries@9(FilterOnDueEntries@1002 : Boolean);
    VAR
      DetailedVendorLedgEntry@1001 : Record 380;
      VendorLedgerEntry@1000 : Record 25;
    BEGIN
      DetailedVendorLedgEntry.SETRANGE("Vendor No.","No.");
      COPYFILTER("Global Dimension 1 Filter",DetailedVendorLedgEntry."Initial Entry Global Dim. 1");
      COPYFILTER("Global Dimension 2 Filter",DetailedVendorLedgEntry."Initial Entry Global Dim. 2");
      IF FilterOnDueEntries AND (GETFILTER("Date Filter") <> '') THEN BEGIN
        COPYFILTER("Date Filter",DetailedVendorLedgEntry."Initial Entry Due Date");
        DetailedVendorLedgEntry.SETFILTER("Posting Date",'<=%1',GETRANGEMAX("Date Filter"));
      END;
      COPYFILTER("Currency Filter",DetailedVendorLedgEntry."Currency Code");
      VendorLedgerEntry.DrillDownOnEntries(DetailedVendorLedgEntry);
    END;

    PROCEDURE SetInsertFromTemplate@11(FromTemplate@1000 : Boolean);
    BEGIN
      InsertFromTemplate := FromTemplate;
    END;

    PROCEDURE "*COSL*"@1000000001();
    BEGIN
    END;

    PROCEDURE GetContactType@1000000004(pVendorNo@1000000000 : Code[20]) : Code[20];
    VAR
      ContBusRel@1000 : Record 5054;
      Cont@1001 : Record 5050;
    BEGIN
      // *GetContactType
      IF pVendorNo = '' THEN
        EXIT('');
      ContBusRel.SETCURRENTKEY("Link to Table","No.");
      ContBusRel.SETRANGE("Link to Table",ContBusRel."Link to Table"::Vendor);
      ContBusRel.SETRANGE("No.",pVendorNo);
      IF ContBusRel.FIND('-') THEN
      BEGIN
         Cont.GET(ContBusRel."Contact No.");
         //EXIT(Cont."Contact Type");
      END ELSE
        EXIT('');
      //+008
    END;

    PROCEDURE fnSetFontColor@1000000006() : Integer;
    BEGIN
      // *fnSetFontColor

      IF "Procurement Comments" <> '' THEN
         EXIT(255)
      ELSE
         EXIT(0);
    END;

    PROCEDURE fnSetRatingColor@1000000007() : Integer;
    VAR
      ltblPurchPayablesSetup@1000000000 : Record 312;
      ltblPORating@1000000001 : Record 50000;
      lintRatedPOCount@1000000002 : Integer;
    BEGIN
      // *fnSetRatingColor()

      ltblPurchPayablesSetup.GET;

      ltblPORating.CALCFIELDS("Document Date");

      ltblPORating.SETRANGE("Buy-From Vendor No.","No.");
      ltblPORating.SETRANGE("Document Date",CALCDATE('-'+FORMAT(ltblPurchPayablesSetup."Rating - PO Cut-Off Period")+'D',TODAY));
      IF ltblPORating.FINDFIRST THEN
         lintRatedPOCount := ltblPORating.COUNT;

      ltblPORating.SETRANGE(Rating,ltblPORating.Rating::Unacceptable);
      IF ltblPORating.FINDFIRST THEN
         IF ltblPORating.COUNT >= (lintRatedPOCount/3) THEN
            EXIT(255)      //Red
         ELSE
            EXIT(19450);   //Orange

      CASE Rating OF
         Rating::Unacceptable:
            EXIT(255);     //Red
         Rating::Mediocre:
            EXIT(19450);   //Orange
         Rating::"Not Rated":
            EXIT(0);       //Black
      ELSE
         EXIT(32768);      //Green
      END;
    END;

    PROCEDURE CheckVATRegNo@1000000003();
    VAR
      ltblContact@1000000001 : Record 5050;
      tblContBusRel@1000000000 : Record 5054;
    BEGIN
      // *CheckVATRegNo()
      IF "No." <> '' THEN BEGIN
      tblContBusRel.RESET;
      tblContBusRel.SETCURRENTKEY("Link to Table","No.");
      tblContBusRel.SETRANGE("Link to Table",tblContBusRel."Link to Table"::Vendor);
      tblContBusRel.SETRANGE("No.", "No.");
      IF tblContBusRel.FINDFIRST THEN BEGIN
        ltblContact.RESET;
        ltblContact.GET(tblContBusRel."Contact No.");
        IF ltblContact."VAT Registration No." = '' THEN
          ERROR('%1 does not exist for Contact "%2". Please complete before editing the Vendor',
                ltblContact.FIELDNAME("VAT Registration No."), ltblContact."No.")
        ELSE IF (ltblContact."VAT Registration No." <> '') AND ("VAT Registration No." = '') THEN
          "VAT Registration No." := ltblContact."VAT Registration No.";
          MODIFY;
      END ELSE
        ERROR('No Contact found for Vendor "%1"', "No.");
      END;
      //+023
    END;

    PROCEDURE CheckPermission@1000000002(pActivity@1000000002 : Code[20];pUser@1000000001 : Code[80]) : Boolean;
    VAR
      mdlUserUtils@1000000000 : Codeunit 60851;
    BEGIN
      // *CheckPermission
      IF mdlUserUtils.HasPermission(pActivity,pUser,'') THEN
        EXIT(TRUE);
    END;

    PROCEDURE LastModified@1000000005();
    VAR
      lmdlCOSLUtils@1000000000 : Codeunit 60800;
    BEGIN
      // *LastModified

      lmdlCOSLUtils.GetServerDateTime("Synchronisation Date","Synchronisation Time","UTC Sync. Date","UTC Sync. Time");
      "Sync. User ID" := UPPERCASE(USERID);
    END;

    PROCEDURE FnSelectSustainibilityDoc@1000000019(pFileType@1000000007 : Integer) : Text[100];
    VAR
      ltblJobsSetup@1000000001 : Record 315;
      ltblFileCreationLog@1000000000 : Record 50114;
      ltxtSaveAsPath@1000000002 : Text[100];
      ltxtSourceFile@1000000003 : Text[1024];
      ltxtSolurceFileName@1000000006 : Text[250];
      ltxtStorageName@1000000008 : Text[250];
      mdlFileUtils@1000000005 : Codeunit 60853;
      mdlCommonDialogMgt@1000000004 : Codeunit 412;
    BEGIN
      //*FnSelectSustainibilityDoc
      //-007
      ltblJobsSetup.GET;
      ltblJobsSetup.TESTFIELD("Supply Chain Charter Folder");

      {
      IF NOT EXISTS(ltblJobsSetup."Sustainability Charter Folder") THEN
        ERROR('Folder ' +
              CONVERTSTR(ltblJobsSetup."Sustainability Charter Folder",'\','/')
              + ' does not exist !');


      ltxtSaveAsPath      := ltblJobsSetup."Supply Chain Charter Folder" + '\';
      ltxtSourceFile      := mdlCommonDialogMgt.OpenFile('Select Document', //Window title
                                                         '*.pdf', // Default file name
                                                         0,  // Default file type
                                                         '', // filter string
                                                         0); // Action

      ltxtSolurceFileName := mdlCommonDialogMgt.convert2file(ltxtSourceFile);

      IF ltxtSolurceFileName <> '' THEN BEGIN

        //check user has not selected the target file...
        IF LOWERCASE(ltxtSourceFile) = LOWERCASE(ltxtSaveAsPath + ltxtSolurceFileName) THEN
           EXIT(ltxtSolurceFileName);

        ltxtStorageName := "No." + '-SC Charter.pdf';

        //Now save the original file under its original name...
        //Check file does not already exist...
        //forstorage in project folder prefix with invoice as users using same file name for multiple
        //documents various invoices
        IF EXISTS(ltxtSaveAsPath + ltxtStorageName) THEN BEGIN
          IF NOT ERASE(ltxtSaveAsPath + ltxtStorageName) THEN BEGIN
            //Remove read-only attribute so that the file can be deleted..
            gFileMan.SetFileAttribute(gCommonDialogMan.convert2folder(ltxtSaveAsPath + ltxtStorageName),
                                    gCommonDialogMan.convert2file(ltxtSaveAsPath + ltxtStorageName),
                                    FALSE,   //Read Only
                                    FALSE,   //Hidden
                                    FALSE,   //System
                                    FALSE    //Archive
                                    );
            {
            mdlFileUtils.SetFileAttributesViaScheduler(ltxtSaveAsPath,
                                                       ltxtStorageName,
                                                       FALSE,    //Read Only
                                                       FALSE,    //Hidden
                                                       FALSE,    //System
                                                       FALSE);   //Archive
            MESSAGE('The file you are replacing is currently set to read-only.\' +
                    'A request has been submitted to remove this so that the file can be replaced.\\' +
                    'Please try again in a few minutes');
            EXIT('');
            }
          END;
        END;

        //Now actually copy the file to target flder and set as read only...
        IF FILE.COPY(ltxtSourceFile,ltxtSaveAsPath + ltxtStorageName) THEN
          mdlFileUtils.SetFileAttributesViaScheduler(ltxtSaveAsPath,
                                                     ltxtStorageName,
                                                     TRUE,     //Read Only
                                                     FALSE,    //Hidden
                                                     FALSE,    //System
                                                     FALSE);   //Archive
        //Record file creation
        ltblFileCreationLog.CreateEntry('',
                                         (ltxtSaveAsPath + ltxtStorageName),
                                         'SC Charter document added for vendor '+ "No.",FALSE);

      END;

      IF (ltxtSolurceFileName<>'') THEN BEGIN
        "Supply Chain Charter File" := ltxtStorageName;
        MODIFY;
        EXIT(ltxtStorageName);
      END ELSE
        EXIT('');
      //+007
      }
    END;

    PROCEDURE FnDeleteSustainibilityDoc@1000000000(pFileType@1000000007 : Integer) : Text[100];
    VAR
      ltblJobsSetup@1000000001 : Record 315;
      ltblFileCreationLog@1000000000 : Record 50114;
      mdlFileUtils@1000000005 : Codeunit 60853;
    BEGIN
      //*FnDeleteSustainibilityDoc
      //-007
      ltblJobsSetup.GET;
      ltblJobsSetup.TESTFIELD("Supply Chain Charter Folder");

      IF ("Supply Chain Charter File"='') THEN BEGIN
        MESSAGE('Supply Chain Charter is not uploaded for this vendor - nothing to delete !');
        EXIT;
      END;

      IF NOT CONFIRM('Are you sure you want to delete Supply Chain Charter ?') THEN
         EXIT;
      {
      IF EXISTS(ltblJobsSetup."Supply Chain Charter Folder"+'\'+ "Supply Chain Charter File") THEN
         //Remove read-only attribute so that the file can be deleted..
         gFileMan.SetFileAttribute(gCommonDialogMan.convert2folder(
                                   ltblJobsSetup."Supply Chain Charter Folder"+'\'+ "Supply Chain Charter File"),
                                    gCommonDialogMan.convert2file(
                                    ltblJobsSetup."Supply Chain Charter Folder"+'\'+ "Supply Chain Charter File"),
                                    FALSE,FALSE,FALSE,FALSE);

      IF NOT EXISTS(ltblJobsSetup."Supply Chain Charter Folder"+'\'+ "Supply Chain Charter File") THEN
        ERROR('File ' +  "Supply Chain Charter File" + ' does not exist in '
              + '\Folder ' + CONVERTSTR(ltblJobsSetup."Supply Chain Charter Folder",'\','/') );

      ERASE(ltblJobsSetup."Supply Chain Charter Folder"+'\'+ "Supply Chain Charter File");

      "Supply Chain Charter File" := '';
      MODIFY;
      //Record file deletion
      ltblFileCreationLog.CreateEntry('',
                          (ltblJobsSetup."Supply Chain Charter Folder"+'\'+ "Supply Chain Charter File"),
                          'SC Charter document deleted for vendor '+ "No.",FALSE);
      //+007
      }
    END;

    PROCEDURE FnPreviewSustainibilityDoc@1000000008();
    VAR
      ltblJobsSetup@1000000000 : Record 315;
    BEGIN
      //-007
      IF ("Supply Chain Charter File"='') THEN BEGIN
        MESSAGE('Supply Chain Charter is not uploaded for this vendor - nothing to view !');
        EXIT;
      END;

      ltblJobsSetup.GET;
      ltblJobsSetup.TESTFIELD("Supply Chain Charter Folder");

      IF NOT EXISTS(ltblJobsSetup."Supply Chain Charter Folder"+'\'+ "Supply Chain Charter File") THEN
        ERROR('File ' +  "Supply Chain Charter File" + ' does not exist in '
              + '\Folder ' + CONVERTSTR(ltblJobsSetup."Supply Chain Charter Folder",'\','/') );

      HYPERLINK(ltblJobsSetup."Supply Chain Charter Folder"+'\'+ "Supply Chain Charter File");
      //+007
    END;

    PROCEDURE RecHandledMDM@1000000011();
    BEGIN
      //-009
      //-012
      //IF "MDM ID" <> '' THEN
      IF ("MDM ID" <> '') AND (NOT CheckPermission('CONT-ADMIN',USERID)) THEN
      //+012
        ERROR('This record is maintained by the MDM database and therefore cannot be edited');
      //+009
    END;

    BEGIN
    END.
  }
}

